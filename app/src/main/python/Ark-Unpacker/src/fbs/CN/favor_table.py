# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_FavorData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_FavorData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_FavorData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_FavorData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_FavorData
    def FavorPoint(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_FavorData
    def Percent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_FavorData
    def BattlePhase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_FavorDataStart(builder):
    builder.StartObject(3)

def clz_Torappu_FavorDataAddFavorPoint(builder, favorPoint):
    builder.PrependInt32Slot(0, favorPoint, 0)

def clz_Torappu_FavorDataAddPercent(builder, percent):
    builder.PrependInt32Slot(1, percent, 0)

def clz_Torappu_FavorDataAddBattlePhase(builder, battlePhase):
    builder.PrependInt32Slot(2, battlePhase, 0)

def clz_Torappu_FavorDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_
    def Data(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_FavorData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_Start(builder):
    builder.StartObject(2)

def clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_AddLevel(builder, level):
    builder.PrependInt32Slot(0, level, 0)

def clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_AddData(builder, data):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(data), 0)

def clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_End(builder):
    return builder.EndObject()



class clz_Torappu_FavorTable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_FavorTable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_FavorTable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_FavorTable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_FavorTable
    def MaxFavor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_FavorTable
    def FavorFrames(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_KeyFrames_2_KeyFrame_Torappu_FavorData_Torappu_FavorData_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_FavorTable
    def FavorFramesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_FavorTable
    def FavorFramesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_FavorTableStart(builder):
    builder.StartObject(2)

def clz_Torappu_FavorTableAddMaxFavor(builder, maxFavor):
    builder.PrependInt32Slot(0, maxFavor, 0)

def clz_Torappu_FavorTableAddFavorFrames(builder, favorFrames):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(favorFrames), 0)

def clz_Torappu_FavorTableStartFavorFramesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_FavorTableEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_FavorTable
