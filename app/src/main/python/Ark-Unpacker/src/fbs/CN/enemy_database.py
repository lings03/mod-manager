# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_SourceApplyWay(object):
    NONE = 0
    MELEE = 1
    RANGED = 2
    ALL = 3


class enum__Torappu_MotionMode(object):
    WALK = 0
    FLY = 1
    E_NUM = 2


class enum__Torappu_EnemyLevelType(object):
    NORMAL = 0
    ELITE = 1
    BOSS = 2
    E_NUM = 3


class enum__Torappu_SpType(object):
    NONE = 0
    INCREASE_WITH_TIME = 1
    INCREASE_WHEN_ATTACK = 2
    INCREASE_WHEN_TAKEN_DAMAGE = 4
    ATTACK_OR_DAMAGE = 6
    ALL = 7


class clz_Torappu_Undefinable_1_System_String_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_String_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_String_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_String_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_String_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_String_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Undefinable_1_System_String_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_System_String_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_System_String_AddMValue(builder, mValue):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(mValue), 0)

def clz_Torappu_Undefinable_1_System_String_End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_System_Int32_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_Int32_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_Int32_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_Int32_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_Int32_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_Int32_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Undefinable_1_System_Int32_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_System_Int32_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_System_Int32_AddMValue(builder, mValue):
    builder.PrependInt32Slot(1, mValue, 0)

def clz_Torappu_Undefinable_1_System_Int32_End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_System_Single_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_Single_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_Single_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_Single_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_Single_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_Single_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def clz_Torappu_Undefinable_1_System_Single_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_System_Single_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_System_Single_AddMValue(builder, mValue):
    builder.PrependFloat32Slot(1, mValue, 0.0)

def clz_Torappu_Undefinable_1_System_Single_End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_System_Boolean_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_Boolean_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_Boolean_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_Boolean_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_Boolean_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_Boolean_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def clz_Torappu_Undefinable_1_System_Boolean_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_System_Boolean_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_System_Boolean_AddMValue(builder, mValue):
    builder.PrependBoolSlot(1, mValue, 0)

def clz_Torappu_Undefinable_1_System_Boolean_End(builder):
    return builder.EndObject()



class clz_Torappu_EnemyDatabase_AttributesData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_EnemyDatabase_AttributesData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_EnemyDatabase_AttributesData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_EnemyDatabase_AttributesData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_EnemyDatabase_AttributesData
    def MaxHp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def Atk(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def Def_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def MagicResistance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def Cost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def BlockCnt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def MoveSpeed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def AttackSpeed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def BaseAttackTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def RespawnTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def HpRecoveryPerSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def SpRecoveryPerSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def MaxDeployCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def MassLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def BaseForceLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def TauntLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def EpDamageResistance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def EpResistance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def DamageHitratePhysical(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def DamageHitrateMagical(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def StunImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def SilenceImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def SleepImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def FrozenImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def LevitateImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def DisarmedCombatImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_AttributesData
    def FearedImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_EnemyDatabase_AttributesDataStart(builder):
    builder.StartObject(27)

def clz_Torappu_EnemyDatabase_AttributesDataAddMaxHp(builder, maxHp):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(maxHp), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddAtk(builder, atk):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(atk), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddDef_(builder, def_):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(def_), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddMagicResistance(builder, magicResistance):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(magicResistance), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddCost(builder, cost):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(cost), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddBlockCnt(builder, blockCnt):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(blockCnt), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddMoveSpeed(builder, moveSpeed):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(moveSpeed), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddAttackSpeed(builder, attackSpeed):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(attackSpeed), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddBaseAttackTime(builder, baseAttackTime):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(baseAttackTime), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddRespawnTime(builder, respawnTime):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(respawnTime), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddHpRecoveryPerSec(builder, hpRecoveryPerSec):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(hpRecoveryPerSec), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddSpRecoveryPerSec(builder, spRecoveryPerSec):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(spRecoveryPerSec), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddMaxDeployCount(builder, maxDeployCount):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(maxDeployCount), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddMassLevel(builder, massLevel):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(massLevel), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddBaseForceLevel(builder, baseForceLevel):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(baseForceLevel), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddTauntLevel(builder, tauntLevel):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(tauntLevel), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddEpDamageResistance(builder, epDamageResistance):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(epDamageResistance), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddEpResistance(builder, epResistance):
    builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(epResistance), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddDamageHitratePhysical(builder, damageHitratePhysical):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(damageHitratePhysical), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddDamageHitrateMagical(builder, damageHitrateMagical):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(damageHitrateMagical), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddStunImmune(builder, stunImmune):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(stunImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddSilenceImmune(builder, silenceImmune):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(silenceImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddSleepImmune(builder, sleepImmune):
    builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(sleepImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddFrozenImmune(builder, frozenImmune):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(frozenImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddLevitateImmune(builder, levitateImmune):
    builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(levitateImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddDisarmedCombatImmune(builder, disarmedCombatImmune):
    builder.PrependUOffsetTRelativeSlot(25, flatbuffers.number_types.UOffsetTFlags.py_type(disarmedCombatImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataAddFearedImmune(builder, fearedImmune):
    builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(fearedImmune), 0)

def clz_Torappu_EnemyDatabase_AttributesDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_Torappu_SourceApplyWay_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_AddMValue(builder, mValue):
    builder.PrependInt32Slot(1, mValue, 0)

def clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_Torappu_MotionMode_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_Torappu_MotionMode_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_Torappu_MotionMode_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_Torappu_MotionMode_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_Torappu_MotionMode_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_Torappu_MotionMode_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Undefinable_1_Torappu_MotionMode_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_Torappu_MotionMode_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_Torappu_MotionMode_AddMValue(builder, mValue):
    builder.PrependInt32Slot(1, mValue, 0)

def clz_Torappu_Undefinable_1_Torappu_MotionMode_End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_System_String___(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_String___()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_String___(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_String___
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_String___
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_String___
    def MValue(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_Undefinable_1_System_String___
    def MValueLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Undefinable_1_System_String___
    def MValueIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_Undefinable_1_System_String___Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_System_String___AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_System_String___AddMValue(builder, mValue):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(mValue), 0)

def clz_Torappu_Undefinable_1_System_String___StartMValueVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Undefinable_1_System_String___End(builder):
    return builder.EndObject()



class clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_Torappu_EnemyLevelType_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_Start(builder):
    builder.StartObject(2)

def clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_AddMValue(builder, mValue):
    builder.PrependInt32Slot(1, mValue, 0)

def clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_End(builder):
    return builder.EndObject()



class clz_Torappu_Blackboard_DataPair(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Blackboard_DataPair()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Blackboard_DataPair(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Blackboard_DataPair
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Blackboard_DataPair
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Blackboard_DataPair
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_Blackboard_DataPair
    def ValueStr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Blackboard_DataPairStart(builder):
    builder.StartObject(3)

def clz_Torappu_Blackboard_DataPairAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def clz_Torappu_Blackboard_DataPairAddValue(builder, value):
    builder.PrependFloat32Slot(1, value, 0.0)

def clz_Torappu_Blackboard_DataPairAddValueStr(builder, valueStr):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(valueStr), 0)

def clz_Torappu_Blackboard_DataPairEnd(builder):
    return builder.EndObject()



class clz_Torappu_LevelData_EnemyData_ESkillData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LevelData_EnemyData_ESkillData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LevelData_EnemyData_ESkillData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LevelData_EnemyData_ESkillData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def PrefabKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def Priority(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def Cooldown(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def InitCooldown(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def SpCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def Blackboard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Blackboard_DataPair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def BlackboardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESkillData
    def BlackboardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

def clz_Torappu_LevelData_EnemyData_ESkillDataStart(builder):
    builder.StartObject(6)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddPrefabKey(builder, prefabKey):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(prefabKey), 0)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddPriority(builder, priority):
    builder.PrependInt32Slot(1, priority, 0)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddCooldown(builder, cooldown):
    builder.PrependFloat32Slot(2, cooldown, 0.0)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddInitCooldown(builder, initCooldown):
    builder.PrependFloat32Slot(3, initCooldown, 0.0)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddSpCost(builder, spCost):
    builder.PrependInt32Slot(4, spCost, 0)

def clz_Torappu_LevelData_EnemyData_ESkillDataAddBlackboard(builder, blackboard):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(blackboard), 0)

def clz_Torappu_LevelData_EnemyData_ESkillDataStartBlackboardVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_LevelData_EnemyData_ESkillDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_LevelData_EnemyData_ESpData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LevelData_EnemyData_ESpData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LevelData_EnemyData_ESpData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LevelData_EnemyData_ESpData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LevelData_EnemyData_ESpData
    def SpType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def MaxSp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def InitSp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def Increment(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def clz_Torappu_LevelData_EnemyData_ESpDataStart(builder):
    builder.StartObject(4)

def clz_Torappu_LevelData_EnemyData_ESpDataAddSpType(builder, spType):
    builder.PrependInt32Slot(0, spType, 0)

def clz_Torappu_LevelData_EnemyData_ESpDataAddMaxSp(builder, maxSp):
    builder.PrependInt32Slot(1, maxSp, 0)

def clz_Torappu_LevelData_EnemyData_ESpDataAddInitSp(builder, initSp):
    builder.PrependInt32Slot(2, initSp, 0)

def clz_Torappu_LevelData_EnemyData_ESpDataAddIncrement(builder, increment):
    builder.PrependFloat32Slot(3, increment, 0.0)

def clz_Torappu_LevelData_EnemyData_ESpDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_EnemyDatabase_EnemyData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_EnemyDatabase_EnemyData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_EnemyDatabase_EnemyData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_EnemyDatabase_EnemyData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_EnemyDatabase_EnemyData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def PrefabKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Attributes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_EnemyDatabase_AttributesData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def ApplyWay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Motion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_Torappu_MotionMode_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def EnemyTags(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_String___()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def LifePointReduce(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def LevelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def RangeRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def NumOfExtraDrops(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def ViewRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def NotCountInTotal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Blackboard_DataPair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def Skills(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_LevelData_EnemyData_ESkillData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def SkillsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def SkillsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        return o == 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def SpData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_LevelData_EnemyData_ESpData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_EnemyDatabase_EnemyDataStart(builder):
    builder.StartObject(16)

def clz_Torappu_EnemyDatabase_EnemyDataAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddPrefabKey(builder, prefabKey):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(prefabKey), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddAttributes(builder, attributes):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(attributes), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddApplyWay(builder, applyWay):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(applyWay), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddMotion(builder, motion):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(motion), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddEnemyTags(builder, enemyTags):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(enemyTags), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddLifePointReduce(builder, lifePointReduce):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(lifePointReduce), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddLevelType(builder, levelType):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(levelType), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddRangeRadius(builder, rangeRadius):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(rangeRadius), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddNumOfExtraDrops(builder, numOfExtraDrops):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(numOfExtraDrops), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddViewRadius(builder, viewRadius):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(viewRadius), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddNotCountInTotal(builder, notCountInTotal):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(notCountInTotal), 0)

def clz_Torappu_EnemyDatabase_EnemyDataAddTalentBlackboard(builder, talentBlackboard):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(talentBlackboard), 0)

def clz_Torappu_EnemyDatabase_EnemyDataStartTalentBlackboardVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_EnemyDatabase_EnemyDataAddSkills(builder, skills):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(skills), 0)

def clz_Torappu_EnemyDatabase_EnemyDataStartSkillsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_EnemyDatabase_EnemyDataAddSpData(builder, spData):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(spData), 0)

def clz_Torappu_EnemyDatabase_EnemyDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_EnemyDatabase_EnemyLevel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_EnemyDatabase_EnemyLevel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_EnemyDatabase_EnemyLevel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_EnemyDatabase_EnemyLevel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_EnemyDatabase_EnemyLevel
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_EnemyDatabase_EnemyLevel
    def EnemyData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_EnemyDatabase_EnemyData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_EnemyDatabase_EnemyLevelStart(builder):
    builder.StartObject(2)

def clz_Torappu_EnemyDatabase_EnemyLevelAddLevel(builder, level):
    builder.PrependInt32Slot(0, level, 0)

def clz_Torappu_EnemyDatabase_EnemyLevelAddEnemyData(builder, enemyData):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(enemyData), 0)

def clz_Torappu_EnemyDatabase_EnemyLevelEnd(builder):
    return builder.EndObject()



class kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAskvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel
    def Value(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_EnemyDatabase_EnemyLevel()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel
    def ValueLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel
    def ValueIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevelStart(builder):
    builder.StartObject(2)

def kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevelAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevelAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevelStartValueVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevelEnd(builder):
    return builder.EndObject()



class clz_Torappu_EnemyDatabase(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_EnemyDatabase()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_EnemyDatabase(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_EnemyDatabase
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_EnemyDatabase
    def Enemies(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = kvp__string__list_clz_Torappu_EnemyDatabase_EnemyLevel()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase
    def EnemiesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_EnemyDatabase
    def EnemiesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def clz_Torappu_EnemyDatabaseStart(builder):
    builder.StartObject(1)

def clz_Torappu_EnemyDatabaseAddEnemies(builder, enemies):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(enemies), 0)

def clz_Torappu_EnemyDatabaseStartEnemiesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_EnemyDatabaseEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_EnemyDatabase
