# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_RecommendItemTagTips(object):
    ONSALE = 0
    DEADLINE = 1
    NONE = 2


class enum__Torappu_ShopRouteTarget(object):
    RECOMMENDSHOP = 0
    CASHSHOP = 1
    GIFTPACKAGE = 2
    SKINSHOP = 3
    HQCSHOP = 4
    LQCSHOP = 5
    EXQCSHOP = 6
    SOCAILSHOP = 7
    FURNSHOP = 8
    REPSHOP = 9
    LMGTSSHOP = 10
    EPGSSHOP = 11
    CLASSICSHOP = 12
    NONE = 13


class enum__Torappu_ShopRecommendTemplateType(object):
    DEFAULT = 0
    NORSKIN = 1
    RETURNSKIN = 2
    NORFURN = 3
    NORGIFT = 4


class enum__Torappu_ShopUnlockType(object):
    ALWAYS_UNLOCK = 0
    SKIN_UNLOCK = 1
    FURN_UNLOCK = 2
    BOTH_SKIN_FURN = 3


class enum__Torappu_ShopCondTrigPackageType(object):
    NONE = 0
    RETURN_PROGRESS = 1
    RETURN_ONCE = 2
    NEW_PROGRESS = 3


class clz_Torappu_ShopRecommendData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendData
    def ImgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendData
    def SlotIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendData
    def Cmd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendData
    def Param1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendData
    def Param2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendData
    def SkinId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopRecommendDataStart(builder):
    builder.StartObject(6)

def clz_Torappu_ShopRecommendDataAddImgId(builder, imgId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(imgId), 0)

def clz_Torappu_ShopRecommendDataAddSlotIndex(builder, slotIndex):
    builder.PrependInt32Slot(1, slotIndex, 0)

def clz_Torappu_ShopRecommendDataAddCmd(builder, cmd):
    builder.PrependInt32Slot(2, cmd, 0)

def clz_Torappu_ShopRecommendDataAddParam1(builder, param1):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(param1), 0)

def clz_Torappu_ShopRecommendDataAddParam2(builder, param2):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(param2), 0)

def clz_Torappu_ShopRecommendDataAddSkinId(builder, skinId):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(skinId), 0)

def clz_Torappu_ShopRecommendDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendGroup(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendGroup()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendGroup(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendGroup
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendGroup
    def RecommendGroup(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # clz_Torappu_ShopRecommendGroup
    def RecommendGroupAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # clz_Torappu_ShopRecommendGroup
    def RecommendGroupLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopRecommendGroup
    def RecommendGroupIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # clz_Torappu_ShopRecommendGroup
    def DataList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopRecommendData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendGroup
    def DataListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopRecommendGroup
    def DataListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_ShopRecommendGroupStart(builder):
    builder.StartObject(2)

def clz_Torappu_ShopRecommendGroupAddRecommendGroup(builder, recommendGroup):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(recommendGroup), 0)

def clz_Torappu_ShopRecommendGroupStartRecommendGroupVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopRecommendGroupAddDataList(builder, dataList):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dataList), 0)

def clz_Torappu_ShopRecommendGroupStartDataListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopRecommendGroupEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopKeeperWord(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopKeeperWord()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopKeeperWord(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopKeeperWord
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopKeeperWord
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopKeeperWord
    def Text(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopKeeperWordStart(builder):
    builder.StartObject(2)

def clz_Torappu_ShopKeeperWordAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def clz_Torappu_ShopKeeperWordAddText(builder, text):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(text), 0)

def clz_Torappu_ShopKeeperWordEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendTemplateNormalGiftParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendTemplateNormalGiftParam()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendTemplateNormalGiftParam(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def ShowStartTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def ShowEndTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def GoodId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def GiftPackageName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def Price(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def LogoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def Color(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def HaveMark(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_ShopRecommendTemplateNormalGiftParam
    def AvailCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_ShopRecommendTemplateNormalGiftParamStart(builder):
    builder.StartObject(9)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddShowStartTs(builder, showStartTs):
    builder.PrependInt64Slot(0, showStartTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddShowEndTs(builder, showEndTs):
    builder.PrependInt64Slot(1, showEndTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddGoodId(builder, goodId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(goodId), 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddGiftPackageName(builder, giftPackageName):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(giftPackageName), 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddPrice(builder, price):
    builder.PrependInt32Slot(4, price, 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddLogoId(builder, logoId):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(logoId), 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddColor(builder, color):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(color), 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddHaveMark(builder, haveMark):
    builder.PrependBoolSlot(7, haveMark, 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamAddAvailCount(builder, availCount):
    builder.PrependInt32Slot(8, availCount, 0)

def clz_Torappu_ShopRecommendTemplateNormalGiftParamEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendTemplateNormalSkinParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendTemplateNormalSkinParam()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendTemplateNormalSkinParam(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def ShowStartTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def ShowEndTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def SkinIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def SkinIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def SkinIdsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def SkinGroupName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def BrandIconId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def ColorBack(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def ColorText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalSkinParam
    def Text(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopRecommendTemplateNormalSkinParamStart(builder):
    builder.StartObject(8)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddShowStartTs(builder, showStartTs):
    builder.PrependInt64Slot(0, showStartTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddShowEndTs(builder, showEndTs):
    builder.PrependInt64Slot(1, showEndTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddSkinIds(builder, skinIds):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(skinIds), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamStartSkinIdsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddSkinGroupName(builder, skinGroupName):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(skinGroupName), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddBrandIconId(builder, brandIconId):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(brandIconId), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddColorBack(builder, colorBack):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(colorBack), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddColorText(builder, colorText):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(colorText), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamAddText(builder, text):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(text), 0)

def clz_Torappu_ShopRecommendTemplateNormalSkinParamEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendTemplateNormalFurnParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendTemplateNormalFurnParam()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendTemplateNormalFurnParam(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def ShowStartTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def ShowEndTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def FurnPackId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def IsNew(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def IsPackSell(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def ColorBack(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def ColorText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendTemplateNormalFurnParam
    def ActId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopRecommendTemplateNormalFurnParamStart(builder):
    builder.StartObject(9)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddShowStartTs(builder, showStartTs):
    builder.PrependInt64Slot(0, showStartTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddShowEndTs(builder, showEndTs):
    builder.PrependInt64Slot(1, showEndTs, 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddFurnPackId(builder, furnPackId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(furnPackId), 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddIsNew(builder, isNew):
    builder.PrependBoolSlot(3, isNew, 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddIsPackSell(builder, isPackSell):
    builder.PrependBoolSlot(4, isPackSell, 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddCount(builder, count):
    builder.PrependInt32Slot(5, count, 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddColorBack(builder, colorBack):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(colorBack), 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddColorText(builder, colorText):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(colorText), 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamAddActId(builder, actId):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(actId), 0)

def clz_Torappu_ShopRecommendTemplateNormalFurnParamEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendTemplateReturnSkinParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendTemplateReturnSkinParam()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendTemplateReturnSkinParam(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendTemplateReturnSkinParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendTemplateReturnSkinParam
    def ShowStartTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendTemplateReturnSkinParam
    def ShowEndTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_ShopRecommendTemplateReturnSkinParamStart(builder):
    builder.StartObject(2)

def clz_Torappu_ShopRecommendTemplateReturnSkinParamAddShowStartTs(builder, showStartTs):
    builder.PrependInt64Slot(0, showStartTs, 0)

def clz_Torappu_ShopRecommendTemplateReturnSkinParamAddShowEndTs(builder, showEndTs):
    builder.PrependInt64Slot(1, showEndTs, 0)

def clz_Torappu_ShopRecommendTemplateReturnSkinParamEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendTemplateParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendTemplateParam()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendTemplateParam(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendTemplateParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendTemplateParam
    def NormalGiftParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopRecommendTemplateNormalGiftParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendTemplateParam
    def NormalSkinParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopRecommendTemplateNormalSkinParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendTemplateParam
    def NormalFurnParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopRecommendTemplateNormalFurnParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendTemplateParam
    def ReturnSkinParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopRecommendTemplateReturnSkinParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_ShopRecommendTemplateParamStart(builder):
    builder.StartObject(4)

def clz_Torappu_ShopRecommendTemplateParamAddNormalGiftParam(builder, normalGiftParam):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(normalGiftParam), 0)

def clz_Torappu_ShopRecommendTemplateParamAddNormalSkinParam(builder, normalSkinParam):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(normalSkinParam), 0)

def clz_Torappu_ShopRecommendTemplateParamAddNormalFurnParam(builder, normalFurnParam):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(normalFurnParam), 0)

def clz_Torappu_ShopRecommendTemplateParamAddReturnSkinParam(builder, returnSkinParam):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(returnSkinParam), 0)

def clz_Torappu_ShopRecommendTemplateParamEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopRecommendItem(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopRecommendItem()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopRecommendItem(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopRecommendItem
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopRecommendItem
    def TagId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendItem
    def DisplayType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendItem
    def TagName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopRecommendItem
    def ItemTag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendItem
    def OrderNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendItem
    def StartDatetime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendItem
    def EndDatetime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendItem
    def GroupList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopRecommendGroup()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendItem
    def GroupListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopRecommendItem
    def GroupListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # clz_Torappu_ShopRecommendItem
    def TagWord(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopKeeperWord()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopRecommendItem
    def TemplateType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopRecommendItem
    def TemplateParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopRecommendTemplateParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_ShopRecommendItemStart(builder):
    builder.StartObject(11)

def clz_Torappu_ShopRecommendItemAddTagId(builder, tagId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(tagId), 0)

def clz_Torappu_ShopRecommendItemAddDisplayType(builder, displayType):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(displayType), 0)

def clz_Torappu_ShopRecommendItemAddTagName(builder, tagName):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(tagName), 0)

def clz_Torappu_ShopRecommendItemAddItemTag(builder, itemTag):
    builder.PrependInt32Slot(3, itemTag, 0)

def clz_Torappu_ShopRecommendItemAddOrderNum(builder, orderNum):
    builder.PrependInt32Slot(4, orderNum, 0)

def clz_Torappu_ShopRecommendItemAddStartDatetime(builder, startDatetime):
    builder.PrependInt64Slot(5, startDatetime, 0)

def clz_Torappu_ShopRecommendItemAddEndDatetime(builder, endDatetime):
    builder.PrependInt64Slot(6, endDatetime, 0)

def clz_Torappu_ShopRecommendItemAddGroupList(builder, groupList):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(groupList), 0)

def clz_Torappu_ShopRecommendItemStartGroupListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopRecommendItemAddTagWord(builder, tagWord):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(tagWord), 0)

def clz_Torappu_ShopRecommendItemAddTemplateType(builder, templateType):
    builder.PrependInt32Slot(9, templateType, 0)

def clz_Torappu_ShopRecommendItemAddTemplateParam(builder, templateParam):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(templateParam), 0)

def clz_Torappu_ShopRecommendItemEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopCreditUnlockItem(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopCreditUnlockItem()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopCreditUnlockItem(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopCreditUnlockItem
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopCreditUnlockItem
    def SortId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCreditUnlockItem
    def UnlockNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCreditUnlockItem
    def CharId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopCreditUnlockItemStart(builder):
    builder.StartObject(3)

def clz_Torappu_ShopCreditUnlockItemAddSortId(builder, sortId):
    builder.PrependInt32Slot(0, sortId, 0)

def clz_Torappu_ShopCreditUnlockItemAddUnlockNum(builder, unlockNum):
    builder.PrependInt32Slot(1, unlockNum, 0)

def clz_Torappu_ShopCreditUnlockItemAddCharId(builder, charId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(charId), 0)

def clz_Torappu_ShopCreditUnlockItemEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopCreditUnlockGroup(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopCreditUnlockGroup()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopCreditUnlockGroup(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopCreditUnlockGroup
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopCreditUnlockGroup
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopCreditUnlockGroup
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopCreditUnlockGroup
    def StartDateTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCreditUnlockGroup
    def CharDict(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopCreditUnlockItem()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopCreditUnlockGroup
    def CharDictLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopCreditUnlockGroup
    def CharDictIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def clz_Torappu_ShopCreditUnlockGroupStart(builder):
    builder.StartObject(4)

def clz_Torappu_ShopCreditUnlockGroupAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def clz_Torappu_ShopCreditUnlockGroupAddIndex(builder, index):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(index), 0)

def clz_Torappu_ShopCreditUnlockGroupAddStartDateTime(builder, startDateTime):
    builder.PrependInt64Slot(2, startDateTime, 0)

def clz_Torappu_ShopCreditUnlockGroupAddCharDict(builder, charDict):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(charDict), 0)

def clz_Torappu_ShopCreditUnlockGroupStartCharDictVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopCreditUnlockGroupEnd(builder):
    return builder.EndObject()



class dict__string__clz_Torappu_ShopCreditUnlockGroup(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__clz_Torappu_ShopCreditUnlockGroup()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__clz_Torappu_ShopCreditUnlockGroup(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__clz_Torappu_ShopCreditUnlockGroup
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__clz_Torappu_ShopCreditUnlockGroup
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__clz_Torappu_ShopCreditUnlockGroup
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopCreditUnlockGroup()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__string__clz_Torappu_ShopCreditUnlockGroupStart(builder):
    builder.StartObject(2)

def dict__string__clz_Torappu_ShopCreditUnlockGroupAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__clz_Torappu_ShopCreditUnlockGroupAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__string__clz_Torappu_ShopCreditUnlockGroupEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopClientData_ShopKeeperData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopClientData_ShopKeeperData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopClientData_ShopKeeperData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopClientData_ShopKeeperData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopClientData_ShopKeeperData
    def WelcomeWords(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopKeeperWord()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData_ShopKeeperData
    def WelcomeWordsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData_ShopKeeperData
    def WelcomeWordsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # clz_Torappu_ShopClientData_ShopKeeperData
    def ClickWords(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopKeeperWord()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData_ShopKeeperData
    def ClickWordsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData_ShopKeeperData
    def ClickWordsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_ShopClientData_ShopKeeperDataStart(builder):
    builder.StartObject(2)

def clz_Torappu_ShopClientData_ShopKeeperDataAddWelcomeWords(builder, welcomeWords):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(welcomeWords), 0)

def clz_Torappu_ShopClientData_ShopKeeperDataStartWelcomeWordsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientData_ShopKeeperDataAddClickWords(builder, clickWords):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(clickWords), 0)

def clz_Torappu_ShopClientData_ShopKeeperDataStartClickWordsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientData_ShopKeeperDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopCarouselData_Item(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopCarouselData_Item()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopCarouselData_Item(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopCarouselData_Item
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopCarouselData_Item
    def SpriteId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopCarouselData_Item
    def StartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCarouselData_Item
    def EndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCarouselData_Item
    def Cmd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_ShopCarouselData_Item
    def Param1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopCarouselData_Item
    def SkinId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopCarouselData_Item
    def FurniId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_ShopCarouselData_ItemStart(builder):
    builder.StartObject(7)

def clz_Torappu_ShopCarouselData_ItemAddSpriteId(builder, spriteId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(spriteId), 0)

def clz_Torappu_ShopCarouselData_ItemAddStartTime(builder, startTime):
    builder.PrependInt64Slot(1, startTime, 0)

def clz_Torappu_ShopCarouselData_ItemAddEndTime(builder, endTime):
    builder.PrependInt64Slot(2, endTime, 0)

def clz_Torappu_ShopCarouselData_ItemAddCmd(builder, cmd):
    builder.PrependInt32Slot(3, cmd, 0)

def clz_Torappu_ShopCarouselData_ItemAddParam1(builder, param1):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(param1), 0)

def clz_Torappu_ShopCarouselData_ItemAddSkinId(builder, skinId):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(skinId), 0)

def clz_Torappu_ShopCarouselData_ItemAddFurniId(builder, furniId):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(furniId), 0)

def clz_Torappu_ShopCarouselData_ItemEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopCarouselData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopCarouselData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopCarouselData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopCarouselData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopCarouselData
    def Items(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopCarouselData_Item()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopCarouselData
    def ItemsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopCarouselData
    def ItemsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def clz_Torappu_ShopCarouselDataStart(builder):
    builder.StartObject(1)

def clz_Torappu_ShopCarouselDataAddItems(builder, items):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(items), 0)

def clz_Torappu_ShopCarouselDataStartItemsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopCarouselDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_ChooseShopRelation(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ChooseShopRelation()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ChooseShopRelation(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ChooseShopRelation
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ChooseShopRelation
    def GoodId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ChooseShopRelation
    def OptionList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_ChooseShopRelation
    def OptionListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ChooseShopRelation
    def OptionListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_ChooseShopRelationStart(builder):
    builder.StartObject(2)

def clz_Torappu_ChooseShopRelationAddGoodId(builder, goodId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(goodId), 0)

def clz_Torappu_ChooseShopRelationAddOptionList(builder, optionList):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(optionList), 0)

def clz_Torappu_ChooseShopRelationStartOptionListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ChooseShopRelationEnd(builder):
    return builder.EndObject()



class dict__string__enum__Torappu_ShopUnlockType(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__enum__Torappu_ShopUnlockType()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__enum__Torappu_ShopUnlockType(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__enum__Torappu_ShopUnlockType
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__enum__Torappu_ShopUnlockType
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__enum__Torappu_ShopUnlockType
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def dict__string__enum__Torappu_ShopUnlockTypeStart(builder):
    builder.StartObject(2)

def dict__string__enum__Torappu_ShopUnlockTypeAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__enum__Torappu_ShopUnlockTypeAddValue(builder, value):
    builder.PrependInt32Slot(1, value, 0)

def dict__string__enum__Torappu_ShopUnlockTypeEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopClientGPData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopClientGPData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopClientGPData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopClientGPData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopClientGPData
    def GoodId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopClientGPData
    def DisplayName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopClientGPData
    def CondTrigPackageType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_ShopClientGPDataStart(builder):
    builder.StartObject(3)

def clz_Torappu_ShopClientGPDataAddGoodId(builder, goodId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(goodId), 0)

def clz_Torappu_ShopClientGPDataAddDisplayName(builder, displayName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(displayName), 0)

def clz_Torappu_ShopClientGPDataAddCondTrigPackageType(builder, condTrigPackageType):
    builder.PrependInt32Slot(2, condTrigPackageType, 0)

def clz_Torappu_ShopClientGPDataEnd(builder):
    return builder.EndObject()



class dict__string__clz_Torappu_ShopClientGPData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__clz_Torappu_ShopClientGPData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__clz_Torappu_ShopClientGPData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__clz_Torappu_ShopClientGPData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__clz_Torappu_ShopClientGPData
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__clz_Torappu_ShopClientGPData
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopClientGPData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__string__clz_Torappu_ShopClientGPDataStart(builder):
    builder.StartObject(2)

def dict__string__clz_Torappu_ShopClientGPDataAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__clz_Torappu_ShopClientGPDataAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__string__clz_Torappu_ShopClientGPDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_LMTGSShopSchedule(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LMTGSShopSchedule()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LMTGSShopSchedule(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LMTGSShopSchedule
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LMTGSShopSchedule
    def GachaPoolId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopSchedule
    def Lmtgsid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopSchedule
    def IconColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopSchedule
    def IconBackColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopSchedule
    def StoreTextColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopSchedule
    def StartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LMTGSShopSchedule
    def EndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_LMTGSShopScheduleStart(builder):
    builder.StartObject(7)

def clz_Torappu_LMTGSShopScheduleAddGachaPoolId(builder, gachaPoolId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(gachaPoolId), 0)

def clz_Torappu_LMTGSShopScheduleAddLmtgsid(builder, lmtgsid):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(lmtgsid), 0)

def clz_Torappu_LMTGSShopScheduleAddIconColor(builder, iconColor):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(iconColor), 0)

def clz_Torappu_LMTGSShopScheduleAddIconBackColor(builder, iconBackColor):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(iconBackColor), 0)

def clz_Torappu_LMTGSShopScheduleAddStoreTextColor(builder, storeTextColor):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(storeTextColor), 0)

def clz_Torappu_LMTGSShopScheduleAddStartTime(builder, startTime):
    builder.PrependInt64Slot(5, startTime, 0)

def clz_Torappu_LMTGSShopScheduleAddEndTime(builder, endTime):
    builder.PrependInt64Slot(6, endTime, 0)

def clz_Torappu_LMTGSShopScheduleEnd(builder):
    return builder.EndObject()



class clz_Torappu_LMTGSShopOverlaySchedule(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LMTGSShopOverlaySchedule()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LMTGSShopOverlaySchedule(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LMTGSShopOverlaySchedule
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LMTGSShopOverlaySchedule
    def GachaPoolId1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopOverlaySchedule
    def GachaPoolId2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LMTGSShopOverlaySchedule
    def PicId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_LMTGSShopOverlayScheduleStart(builder):
    builder.StartObject(3)

def clz_Torappu_LMTGSShopOverlayScheduleAddGachaPoolId1(builder, gachaPoolId1):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(gachaPoolId1), 0)

def clz_Torappu_LMTGSShopOverlayScheduleAddGachaPoolId2(builder, gachaPoolId2):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(gachaPoolId2), 0)

def clz_Torappu_LMTGSShopOverlayScheduleAddPicId(builder, picId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(picId), 0)

def clz_Torappu_LMTGSShopOverlayScheduleEnd(builder):
    return builder.EndObject()



class clz_Torappu_ShopClientData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_ShopClientData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_ShopClientData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_ShopClientData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_ShopClientData
    def RecommendList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopRecommendItem()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def RecommendListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def RecommendListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # clz_Torappu_ShopClientData
    def CreditUnlockGroup(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__clz_Torappu_ShopCreditUnlockGroup()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def CreditUnlockGroupLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def CreditUnlockGroupIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # clz_Torappu_ShopClientData
    def ShopKeeperData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_ShopClientData_ShopKeeperData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def Carousels(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ShopCarouselData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def CarouselsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def CarouselsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # clz_Torappu_ShopClientData
    def ChooseShopRelations(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_ChooseShopRelation()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def ChooseShopRelationsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def ChooseShopRelationsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # clz_Torappu_ShopClientData
    def ShopUnlockDict(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__enum__Torappu_ShopUnlockType()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def ShopUnlockDictLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def ShopUnlockDictIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # clz_Torappu_ShopClientData
    def ExtraQcshopRule(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_ShopClientData
    def ExtraQcshopRuleLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def ExtraQcshopRuleIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # clz_Torappu_ShopClientData
    def RepQcshopRule(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_ShopClientData
    def RepQcshopRuleLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def RepQcshopRuleIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # clz_Torappu_ShopClientData
    def ShopGpdataDict(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__clz_Torappu_ShopClientGPData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def ShopGpdataDictLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def ShopGpdataDictIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # clz_Torappu_ShopClientData
    def ShopMonthlySubGoodId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_ShopClientData
    def Ls(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_LMTGSShopSchedule()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def LsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def LsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # clz_Torappu_ShopClientData
    def Os(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_LMTGSShopOverlaySchedule()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_ShopClientData
    def OsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_ShopClientData
    def OsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

def clz_Torappu_ShopClientDataStart(builder):
    builder.StartObject(12)

def clz_Torappu_ShopClientDataAddRecommendList(builder, recommendList):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(recommendList), 0)

def clz_Torappu_ShopClientDataStartRecommendListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddCreditUnlockGroup(builder, creditUnlockGroup):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(creditUnlockGroup), 0)

def clz_Torappu_ShopClientDataStartCreditUnlockGroupVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddShopKeeperData(builder, shopKeeperData):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(shopKeeperData), 0)

def clz_Torappu_ShopClientDataAddCarousels(builder, carousels):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(carousels), 0)

def clz_Torappu_ShopClientDataStartCarouselsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddChooseShopRelations(builder, chooseShopRelations):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(chooseShopRelations), 0)

def clz_Torappu_ShopClientDataStartChooseShopRelationsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddShopUnlockDict(builder, shopUnlockDict):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(shopUnlockDict), 0)

def clz_Torappu_ShopClientDataStartShopUnlockDictVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddExtraQcshopRule(builder, extraQcshopRule):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(extraQcshopRule), 0)

def clz_Torappu_ShopClientDataStartExtraQcshopRuleVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddRepQcshopRule(builder, repQcshopRule):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(repQcshopRule), 0)

def clz_Torappu_ShopClientDataStartRepQcshopRuleVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddShopGpdataDict(builder, shopGpdataDict):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(shopGpdataDict), 0)

def clz_Torappu_ShopClientDataStartShopGpdataDictVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddShopMonthlySubGoodId(builder, shopMonthlySubGoodId):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(shopMonthlySubGoodId), 0)

def clz_Torappu_ShopClientDataAddLs(builder, ls):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(ls), 0)

def clz_Torappu_ShopClientDataStartLsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataAddOs(builder, os):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(os), 0)

def clz_Torappu_ShopClientDataStartOsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_ShopClientDataEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_ShopClientData
