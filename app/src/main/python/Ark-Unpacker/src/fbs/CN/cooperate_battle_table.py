# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_ProfessionCategory(object):
    NONE = 0
    WARRIOR = 1
    SNIPER = 2
    TANK = 4
    MEDIC = 8
    SUPPORT = 16
    CASTER = 32
    SPECIAL = 64
    TOKEN = 128
    TRAP = 256
    PIONEER = 512


class enum__Torappu_Battle_Cooperate_EndTileType(object):
    NONE = 0
    MY_SIDE = 1
    MATE_SIDE = 2
    SHARED = 3


class clz_Torappu_Blackboard_DataPair(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Blackboard_DataPair()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Blackboard_DataPair(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Blackboard_DataPair
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Blackboard_DataPair
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Blackboard_DataPair
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_Blackboard_DataPair
    def ValueStr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Blackboard_DataPairStart(builder):
    builder.StartObject(3)

def clz_Torappu_Blackboard_DataPairAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def clz_Torappu_Blackboard_DataPairAddValue(builder, value):
    builder.PrependFloat32Slot(1, value, 0.0)

def clz_Torappu_Blackboard_DataPairAddValueStr(builder, valueStr):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(valueStr), 0)

def clz_Torappu_Blackboard_DataPairEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def BuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def AtRoot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Title(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Blackboard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Blackboard_DataPair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def BlackboardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def BlackboardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardStart(builder):
    builder.StartObject(6)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddBuffId(builder, buffId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(buffId), 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddAtRoot(builder, atRoot):
    builder.PrependBoolSlot(2, atRoot, 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddTitle(builder, title):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(title), 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddBlackboard(builder, blackboard):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(blackboard), 0)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardStartBlackboardVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardEnd(builder):
    return builder.EndObject()



class dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardStart(builder):
    builder.StartObject(2)

def dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddKey(builder, key):
    builder.PrependInt32Slot(0, key, 0)

def dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoardEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateBonusData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateBonusData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateBonusData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Fail(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Weight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Blackboard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Blackboard_DataPair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def BlackboardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateBonusData
    def BlackboardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

def clz_Torappu_Battle_Cooperate_CooperateBonusDataStart(builder):
    builder.StartObject(5)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataAddFail(builder, fail):
    builder.PrependBoolSlot(1, fail, 0)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataAddWeight(builder, weight):
    builder.PrependInt32Slot(2, weight, 0)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataAddBlackboard(builder, blackboard):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(blackboard), 0)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataStartBlackboardVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateBonusDataEnd(builder):
    return builder.EndObject()



class dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Battle_Cooperate_CooperateBonusData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusDataStart(builder):
    builder.StartObject(2)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusDataAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusDataAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateEndTileInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoStart(builder):
    builder.StartObject(2)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoEnd(builder):
    return builder.EndObject()



class dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoStart(builder):
    builder.StartObject(2)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddKey(builder, key):
    builder.PrependInt32Slot(0, key, 0)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateModeBattleData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateModeBattleData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateModeBattleData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CostTransferred(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CostTransferredExtra(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def GetMaxMsgCntInOneUpdate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def BuffList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__enum__Torappu_ProfessionCategory__clz_Torappu_Battle_Cooperate_CooperateProfessionBuffBlackBoard()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def BuffListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def BuffListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CooperateBonusMap(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__clz_Torappu_Battle_Cooperate_CooperateBonusData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CooperateBonusMapLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CooperateBonusMapIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfo(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfoLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfoIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStart(builder):
    builder.StartObject(6)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddCostTransferred(builder, costTransferred):
    builder.PrependInt32Slot(0, costTransferred, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddCostTransferredExtra(builder, costTransferredExtra):
    builder.PrependInt32Slot(1, costTransferredExtra, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddGetMaxMsgCntInOneUpdate(builder, getMaxMsgCntInOneUpdate):
    builder.PrependInt32Slot(2, getMaxMsgCntInOneUpdate, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddBuffList(builder, buffList):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(buffList), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartBuffListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddCooperateBonusMap(builder, cooperateBonusMap):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(cooperateBonusMap), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartCooperateBonusMapVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddEndTileInfo(builder, endTileInfo):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(endTileInfo), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartEndTileInfoVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_Battle_Cooperate_CooperateModeBattleData
